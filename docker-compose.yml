version: "3.7"
services:
  app:
    build: .
    command: "python main.py"
    links:
      - db
      - kafka
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mynet
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - mynet
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - mynet
  db:
    image: postgres
    restart: always
    volumes:
      - .:/var/lib/postgresql/data/
    environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=db
            - POSTGRES_HOST=localhost
            - PGDATA=/var/lib/postgresql/data/db/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=admin pg_isready -h localhost -p 5432 -U admin -d database"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mynet
volumes:
  kafka-volume:
  zookeeper-volume:
networks:
    mynet:
      name: mynet